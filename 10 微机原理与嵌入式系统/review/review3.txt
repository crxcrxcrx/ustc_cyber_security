3 存储器系统

3.1 存储器概述
    CD 
        Compact Disc
        光盘
    DVD 
        Digital Video Disc
        数字视频光盘
    RAM 
        Random Access Memory
        随机存取存储器
    SRAM 
        Static Random Access Memory
        静态随机存取存储器
    DRAM 
        Dynamic Random Access Memory
        动态随机存取存储器
    ROM 
        Read Only Memory
        只读存储器
    PROM 
        Programmable Read Only Memory
        可编程只读存储器
    EPROM 
        Electrical Programmable Read Only Memory
        可擦可编程只读存储器
    UVEPROM
        UltraViolet Electrical Programmable Read Only Memory
        紫外线可擦可编程只读存储器
    EEPROM 
        Electrically Erasable Programmable Read Only Memory
        电可擦可编程只读存储器
    TTL 
        Transistor Transistor Logic
        晶体管晶体管逻辑电路
    CMOS 
        Complementary Metal Oxide Semiconductor
        互补型金属氧化物半导体电路
    SSD 
        Solid State Disc
        固态硬盘
    IDE 
        Integrated Device Electronics
        电子集成驱动器
    ATA 
        Advanced Technology Attachment
        高技术配置
    UltraDMA 
        Ultra Direct Memory Access
        高级直接内存访问
    PATA 
        Parallel Advanced Technology Attachment
        并行高技术配置
    SCSI 
        Small Computer System Interface
        小型计算机系统接口
    SATA 
        Serial Advanced Technology Attachment
        串行高技术配置
    SAS 
        Serial Attached Small Computer System Interface
        串行连接小型计算机系统接口
    SD 
        Secure Digital memory card
        安全数码卡
    MMC 
        Multi Media Card 
        多媒体卡
    MLC 
        MultiLevel Cell
        多层式储存
    eMMC 
        embedded Multi Media Card
        嵌入式多媒体卡
    UFS 
        Universal Flash Storage
        通用闪存存储
    存储器类型
        磁介质存储器(非易失, 但不是ROM)
            早期磁介质存储器
                磁泡
                磁鼓
                磁芯
            现代存储器
                磁盘
                    硬盘
                    软盘
                磁带
        光存储器(成本较低, 在磁和半导体时代之间风靡一时)
            只读型光盘
                CD/DVD-Audio
                CD/DVD-Video
                CD/DVD-ROM
                Blu-ray
            可记录型光盘
                CD/DVD-R
                CD/DVD-RW
                DVD-RW
                DVD-RAM
                Double Layer DVD-R
        半导体存储器
            RAM
                SRAM
                DRAM
            ROM(一开始只能读不能写, 现在可以写了, 不易失)
                掩模ROM(不可写)
                PROM(可写一次)
                EPROM(可多次写)
                    UVEPROM
                    EEPROM
                    Flash
                        NAND
                        NOR
    存储器工艺
        TTL
        CMOS
    存储器保存性
        易失
        非易失
    存储器功能位置
        高速缓冲存储器
        主存储器
        辅助存储器
    存储器结构组成
        二级结构, 内存->外存
        四级结构, 寄存器->Cache->主存->辅存
        金字塔结构, 寄存器->内部cache->外部Cache->主存->联机外存->脱机外存
        级间可以数据交换, 寄存器和内存也可直接交换
        寄存器 
            组成
                采用触发器, 构成CPU一部分
            功能
                暂存指令, 数据, 地址
            特点
                CPU处理的数据先提取到寄存器, 存储容量有限, 高速 
        Cache 
            组成
                采用SRAM, 在CPU和内存之间
            功能
                CPU向内存读取数据时, 先看Cache有无数据, 若有则直接读取
            特点
                成本高, 容量小, 速度比内存快得多, 几乎是CPU速度
                系统动态管理, 根据访问频率替换
        主存
            组成
                主要采用DRAM, ROM 
                有些小容量场合, 也可采用SRAM
            功能
                程序运行都在内存进行, 存储数据和指令等
            特点
                成本较高, 容量较大, 速度高, 但比Cache速度低一点
        辅存
            组成
                联机外存
                    磁介质机械硬盘, SSD
                脱机外存
                    移动硬盘, 光盘, U盘, Flash
            功能
                存储需要永久存储的文件
            特点
                磁介质机械硬盘成本低, 容量大
                SSD接口规范, 定义, 功能, 使用方法和普通机械硬盘完全相同, 外形尺寸也一致
                脱机外存易于携带
            接口标准
                包括硬盘接口标准, Flash存储卡接口标准等
                通用接口标准便于不同类型辅存提高接入的互换性, 便于产品升级维护
                分类
                    微机常用接口
                        IDE
                            又称为ATA
                            后来发展成UltraDMA
                            由于采用并行接口传输, 又被称为PATA
                            曾是微型机最常见硬盘接口规范, 现已被SATA取代
                            早期软驱(光驱)也采用PATA
                            用40/80针排线连接PC和硬盘
                            16位双向总线并行传送
                        SCSI 
                            用于计算机和周边设备系统级接口的独立处理器标准
                            配备专门SCSI控制卡, 最多连15硬盘, 可驱动其他SCSI接口外设
                            同期产品性能优于IDE
                            限于成本, 多用于高端服务器和工作站
                        SATA 
                            使用了差动信号系统, 有效滤除噪声
                            用4针串行点对点传送, 一次一位, 总线8位, 一次时钟周期传1B
                            接口结构简单, 减小功耗, 支持热插拔
                            可检查传输指令并自动纠错
                            现已有SATA2和SATA3
                        SAS 
                            新一代SCSI技术, 类似SATA, 采用了串行技术获得更高速
                            向下兼容SATA
                    嵌入式设备接口
                        SD
                            由MMC发展而来, 长宽相同, 但是较厚
                            集成了闪存记忆卡控制器, MLC和NAND Flash
                            9针接口与专门驱动器连接
                            低耗电, 广供电电压, 适合移动设备
                            衍生类型Micro SD更小尺寸, 成为脱机外存主流
                        eMMC 
                            基于MMC协议, 内嵌式, 适合移动设备
                            集成了控制器, MMC标准封装接口和NAND Flash 
                            半双工, 有被全双工的UFS取代的趋势
                        UFS 
                            集成了控制器, 也是内嵌式
                            有寄存器接口
                            定义了系统内存数据结构, 便于交换数据控制状态信息
                            串行传输, 全双工, 读写同时进行
                            抗电磁干扰和串扰
    缓存以前在主板上, 现在在CPU里
        缓存分级, 现在普遍是三级
    工具软件CPU-Z可以查看CPU参数

3.2 半导体存储芯片的基本结构和性能指标
    存储器性能指标
        存储容量
            位数, 字数, 字节数
        存取时间
            启动一次存取操作到完成操作的经历时间
        存取周期
            连续启动两次独立的存取操作需要间隔的最小时间
        数据传输速率带宽
            单位时间传输的信息量
        可靠性
            两次故障间平均时间间隔
        功耗
        价格
        电源种类
    RAM 
        易失性存储器, 用于PC或嵌入式
        暂存数据, 断电易失
        随时写入读取信息, 分成双极性和MOS型两种, 前者速度高但功耗低, 因此几乎都是后者
        分成两类
            SRAM 
                双稳态触发器为基础(6个MOS管作为一个基本存储单元)
                数据无需刷新, 速度快
                集成度低, 适合不需大容量的微型计算机
                对M*N的SRAM, 地址线有log_2 M个, 数据线有N个
                地址线由行列选择信号决定
                高电位是1, 低电位是0
            DRAM
                电容为基础(1个MOS管和1个小电容作为一个基本存储单元, 还需刷新放大电路)
                需要定时刷新电路, 速度慢, 逐行刷新
                集成度高, 适合大存储容量的计算机
                地址线由行列选择信号决定
                可以有奇偶校验
                电容有电是1, 没有电是0
    ROM 
        非易失性存储器, 用于嵌入式
        存储长时间数据, 断电留存
        掩模ROM和PROM已淘汰, 现广泛用EEPROM和Flash
        早已不是"只读", 但是这样叫是一种习惯, 只读是相对CPU读写控制电平和逻辑控制说的
        现在用的这两种都是可在线变成读写的, 但需要专门写, 擦除的电平和时序
        掩模ROM
            固化数据, 不可修改
            组成部分
                存储矩阵
                    许多存储单元, 有对应地址代码
                地址译码器
                    把输入地址译码成地址控制信号
                输出缓冲器
                    提高存储器带负载能力, 实现对输出状态控制, 使得与系统总线连接隔离
        PROM 
            可编程, 出厂时全存1, 可按需写入0来编程
            快速熔断丝结构, 需要加足够大电流便烧断所需要的单元
        UVEPROM 
            可擦除可编程, 通过重叠的栅极控制栅和浮置栅工作
            控制栅控制读写, 浮置栅长期保存注入的电荷
            利用紫外线光电效应擦除, 雪崩击穿写入
        EEPROM 
            可擦除可编程可在电路板直接编程写入, 通过重叠的栅极控制栅和浮动栅工作
            控制栅控制读写, 浮动栅长期保存注入的电荷
            浮动栅与漏极之间有一层极薄的氧化硅作为隧道区
            存储单元附加一个选通管, 保护氧化层, 提高擦写可靠性
            比UVEPROM快, 但是远不及RAM
            利用高电压擦除和写入
        Flash 
            快速擦写非易失, 内含多个寄存器和内部控制逻辑
            是半导体厂商研发重点, 新技术新材料新产品较多
            现在常见的Flash类似MOS工艺的EEPROM
            但是没有选通管
            NAND
                存储密度和容量大
                擦写均基于隧道效应
                只能按块读取
                读擦写操作传输效率低, 读擦写以块或页执行
            NOR
                容量小成本高
                擦除基于隧道效应, 写入采用热电子注入
                可按位随机读取
                芯片内执行, 应用可以像内存一样使用闪存
                读操作传输效率很高
                写操作效率低, 写操作只能在0或已擦除单元进行, 且需要按块执行
            浮空栅有电荷是0, 没有是1

3.3 内存条性能的改进
    SPD 
        Serial Presence Detect 
        串行存在性检测
    PCB 
        Printed Circuit Board
        印刷电路板
    BGA 
        Ball Grid Array
        一种封装方式
    TSOP 
        Thin Small Outline Package
        一种封装方式
    SIPP 
        Single Inline Pin Package
        单列直插式排针封装
    SIMM 
        Single Inline Memory Module
        单列直插式内存模块
    FPM
        Fast Page Mode 
        快速页面模式
    EDO 
        Extended Data Out 
        扩展数据输出
    SDR 
        Single Data Rate
        单倍速率
    SDRAM 
        Synchronous Dynamic Random Access Memory
        同步动态随机存取内存
    RDRAM 
        Rambus Dynamic Random Access Memory
        Rambus公司的动态随机存取内存
    DDR 
        Double Data Rate
        双倍速率
    内存条目的
        扩展性
            早期内存芯片直接固化线路板上, 无法拆卸扩展麻烦
            随着软件规模扩大, 迫切需要提高运行速度和扩大内存容量
        互换性
            不同系统采用相同内存, 降低系统成本
        灵活性
            针对系统规模灵活配置
        可维护性
            通过标准化, 内存可以通用, 提高维护效率降低维护成本
    内存条组成
        内存颗粒
            内存芯片, 根据容量集成数量不等的内存颗粒
            两种封装方式
                TSOP封装
                    引脚在两个相对侧面伸出排列成线
                    价格便宜, 成品率高
                    体积较大
                BGA封装
                    引脚在底部球状排列成格
                    快速有效散热途径
                    比TSOP体积小, 相同容量仅有1/3
        SPD芯片
            是一片EEPROM, 记录内存条的基本参数数据
            开机时BIOS自动读取SPD信息, 对主存配置成规定工作频率, 工作最佳状态
        PCB电路板
            4层或6层电路板, 多层减小电路体积, 可分层屏蔽电路减少电磁辐射
            电源和地用单独的层
        引脚
            俗成金手指
            与计算机总线连接
        阻容原件
            提高信号完整性, 防止信号反弹, 滤除高频干扰
    内存条演变
        传统DRAM
            访问需发送行, 发送列, 读写三阶段
        SIPP
            最早的内存条
        SIMM
            很快取代了SIPP
            采用异步DRAM
            FPM
                对连续地址访问, 除第一需列地外, 其他只需发送行和读写两个阶段
            EDO
                取消主板与内存的存储周期时间间隔, 输入下一个行时数据输出仍可进行
        SDR SDRAM 
            同步模式存取数据
            在时钟上升沿进行读写操作
            支持突发总线模式, 对连续地址访问提高速度
        RDRAM 
            新的高速简单内存架构
            减少数据复杂性
            内部引入了RISC, 提高时钟频率简化每个周期数据量
        DDR SDRAM 
            在时钟上升沿下降沿均可进行一次对等的读写操作
            标称是工作频率*2, 并不是工作频率
            DDR2
                采用了4bit预读取, 数据通过四条线串行输入
            DDR3
                采用了8bit预读取, 但是很难再次增加预读取位数
            DDR4
                采用了Bank Group架构, 每分组可独立读写数据
                点到点传输, 每个通道只有一个内存条, 消除了共享瓶颈
                3D堆叠, 单根内存条容量在散热允许情况下提高
                增加了信号完整性可靠性组件
            DDR5 
                正在推广, 草案已完成

3.4 存储系统的层次架构
    MMU 
        Memory Management Unit
        内存管理单元
    是核心, CPU访问存储器约占用了70%时间
    问题
        存取速度在提高, 但是主存增速和CPU增速不同步
        指令执行期间CPU频繁访问存储器占用时间
        主存难以平衡速度快, 容量大, 成本低要求
        早期计算机可以对物理地址直接操作, 但是极其危险
    解决方法是虚拟存储器
        OS通过调度把使用的部分保留在内存里, 其他部分保存在磁盘上
    Cache与虚存异同
        相同点
            两者均有利于提高存储系统性能
            基于程序局部性原理
        不同点
            虚存中未命中的性能损失远大于Cache未命中的损失
            Cache主要解决主存与CPU速度匹配问题,  虚存主要解决主存容量低问题
            CPU和Cache有直接访问通路, 虚存所依赖的辅存并没有
            Cache由硬件完成, 管理对系统和应用都透明, 虚存需要OS调度
    虚拟地址和物理地址
        虚拟地址是CPU位数, 物理地址是实际空间
        未使用虚存, 则地址直接送进物理内存
        使用虚存, 则需要送到MMU转换映射
            MMU负责虚拟地址到物理地址转换, 内存保护和CPU高速缓存控制等
    虚存地址变换方法
        段式
            按照程序自然长度分不定长的段
            需要通过主存的段表映射
            段表包含用户号U, 段号S, 段内偏移地址D组成
            优点
                段依赖于程序自然分界, 易于编译管理修改保护
            缺点
                长度不一,容易留下段间存储空间碎片
                辅存比主存慢得多, 每次交换都会让机器卡顿, 在大的段交换更明显卡顿
        页式
            按照定长的一个数值分定长的页
            需要通过主存的页表映射
            页表包含用户号U, 虚页号P, 页内偏移地址D组成
            优点
                管理粒度比段式更细
                缓解段交换的卡顿
            缺点
                由于页不是程序独立模块对应的逻辑实体, 对于程序的管理, 不如段方便
                缺页错误会导致运行远大于实际物理内存的程序, 页的执行效率会下降
        段页式
            先分段, 再分页
            需要通过主存的虚地址转换
            虚地址包含用户号U, 段号S, 虚页号P, 页内偏移地址D组成

3.5 Cache 
    没有Cache之前的问题
        CPU需要频繁存取访问
        CPU速度比大容量DRAM快得多
        存储器访问速度低制约计算机性能
    两种局部性
        时间局部性, 最近访问的信息可能再次访问
        空间局部性, 最近访问信息的邻居可能被访问
    解决方法 
        根据时空局部性
            经常访问的代码和数据保存到Cache中
            不常访问的代码放在主存中
        实现方法
            在主存和CPU间引入Cache
            Cache是无需刷新的SRAM
            把最近被访问的信息和它的临近信息放到Cache中
    Cache原理
        命中率
            CPU访问数据时, 先检查Cache
            如果在Cache中, 则访问, 是命中
            如果不在, 则访问主存, 是脱靶
            命中率=命中次数/访问次数*100%
            通常应该90%以上, 组织好的话能达到95%
        是否命中和Cache容量, 控制算法和组织方式有关, 和运行的程序也有关
        Cache基本单元, 行或区块
        主存以行或区块为单位映射到Cache中
        每一个Cache都有一个标记位, 用于表示主存中对应位置
        若Cache已用满, 替换掉最少使用的Cache给新的块
        修改字块问题
            程序先写Cache, 替换出去再写入主存
            程序同时写Cache和主存
        需要解决的问题
            Cache地址和主存地址的映射以及转换
            按照一定原则对Cache内容进行替换
        这是硬件实现的, 对CPU和用户端都透明
    Cache整个系统的组成
        Cache模块SRAM
            Cache Tag
                记录Cache中数据位置, 判断是否命中
            Cache存储体
                用来存储片外数据
            Cache控制器
                Cache地址寄存器
                    存放Cache的页号, 块号, 字号, 块内偏移地址等信息, 由地址变换方法决定
                主存地址寄存器
                    存放主存的页号, 块号, 字号, 块内偏移地址等信息, 由地址变换方法决定
                主存Cache地址变换部件
                    建立目录表来实现转换
                替换控制部件
                    Cache满时按一定策略替换数据块
                注意, 地址寄存器的地址不是直接地址, 须通过地址变换部件按映射方式变换
        主存DRAM
            传统没有Cache时的主存
        Cache控制器
            控制主存和Cache间数据传输
                CPU发出读写请求后, Cache控制器先将请求转向Cache存储器
                若在Cache中, 则进行读写操作, 为一次命中
                若不在Cache中, 则CPU对主存操作, 为一次脱靶
        控制特点
            对CPU和用户均透明
            通过Cache模块的主存Cache地址变换部件判断是否命中
            包含一个相联存储器
                可以在Cache控制器管理下按照一定地址映射关系动态建表
    地址映射与转换
        地址映射
            主存单元数据在被复制到Cache同时, 主存单元地址也经某方式写进Tag
        地址变换
            CPU读写数据时把主存地址变换为访问Cache的地址
        Cache的组织方式
            全相联映射
                完全随意对应
                Cache和主存均分块, Cache和主存间以块为单位相对应
                访问方法
                    通过查找块表完成主存地址到Cache地址的转换
                    CPU访问主存, m是主存块号, w是块内字号
                    根据块表找到块m对应的块c
                    若找到, 则命中, 否则脱靶
                    CPU访问Cache, c是Cache块号, w是块内字号
                特点
                    主存某块的内容可以存入Cache任意块中
                    Cache区块和主存区块位置上没有任何关系
                        CPU访问主存时, Cache控制器对地址要在Tag逐一比对
                    为保证时效性, 需Cache中区块数那么多的比较电路并行比较
                        Cache实际利用率低, 电路实现代价高
                优点
                    Cache利用率高
                    不易冲突
                    命中率高
                缺点
                    比较和替换的策略电路复杂
                    只适用于小容量Cache
                    必须全比较, 速度低成本高
            直接相联映射
                一对多硬性对应
                主存按照Cache大小划分若干页(也称区, 页内分块)
                主存某块j只能映射到满足i=j mod 2^C的Cache块i中
                访问方法
                    CPU访问主存, t是标志号, c是Cache块号, w是块内字号
                    根据主存地址的c字段找Cache相应的块(c就是除以2^C的余数)
                    将该块的t与主存的t比较(t就是除以2^C的商)
                    若相符, 则命中, 否则脱靶
                    根据主存地址w字段合成Cache地址
                    CPU访问Cache, c是Cache的地址偏移量
                特点
                    按照Cache大小对主存分页, 主存中不同页但偏移量相同数据会冲突
                    Tag只需记录区块在主存的页号
                    即使Cache有空闲块, 也有可能因为固定映像而不能使用
                优点
                    映射方式简单
                    硬件设备简单
                    速度快
                缺点
                    替换操作频繁
                    同一个偏移量只能调用一个Cache, 冲突率高
                    命中率低
            多路组相联映射
                多对多有限随意对应
                Cache划分成2^U组, 每个组分成2^V块
                主存容量是Cache容量整数倍, 主存划分成2^S页, 每个页分成2^U块
                Cache的组和主存的块是直接相联映射
                Cache的组内各块和主存的块是全相联映射
                主存某块j只能映射到满足i=j mod 2^U的Cache组i中
                访问方法
                    CPU访问主存, s是主存页号, u是页内块号, w是块内地址
                    根据主存地址的u字段找Cache相应的组(u就是除以2^U的余数)
                    将该组的所有项的s与主存的s比较(s就是除以2^U的商)
                    若相符, 则继续, 否则脱靶
                    根据组表找到u对应的块v
                    若找到, 则命中, 否则脱靶
                    CPU访问Cache, u是组号, v是块号, w是块内偏移量
                特点
                    是上方两方式的折中方案, 是有限度的随意对应
                    将Cache也分组, 组内全相联, 组外直接相联
                    避免冲突同时减少比较电路成本
                优点
                    块的冲突概率低
                    块的利用率高
                    块的失效率降低
                缺点
                    实现难度和造价比直接映射高
    更新与替换策略
        读出策略
            贯穿读出
                将Cache隔在CPU和主存间
                CPU所有对主存的请求先送到Cache
                命中则切断请求并送出数据
                脱靶则请求送给主存
                优点
                    降低CPU对主存请求次数
                缺点
                    延迟了CPU对主存访问时间
            旁路读出
                CPU同时对Cache和主存请求
                若命中, 则且端对主存请求
                若脱靶, Cache无动作, CPU收到主存信数据
                优点
                    无时间延迟
                缺点
                    CPU对主存请求多, 占用一部分总线时间
        写入策略
            写通方式
                CPU写信号送到Cache的同时, 也写入主存
                优点
                    操作简单
                    较好保持Cache和主存一致性
                    可靠性高
                缺点
                    主存慢速, 降低了写速度且占用总线时间
                    没有发挥出Cache高速访问优势
            写回方式
                CPU只对Cache更新, 主存数据不变
                在Cache设置修改标志位, 若数据修改, 则置1
                Cache换出主存时, 检查标志位, 如果是1则写入
                优点
                    克服了写通方式写速度低的问题
                    利于提高CPU执行效率
                缺点
                    有Cache和主存数据不一致的隐患
                    控制复杂
        替换策略
            随机替换策略
                随机选择某块替换
                优点
                    方法简单
                    硬件实现容易
                    速度快
                缺点
                    被换出数据可能要装入
            最不经常使用替换策略
                将一段时间内被访问次数最少的块替换出去
                每块设置一个计数器, 从0开始, 每访问一次自增
                需要替换时替换最小的, 清零所有块
                优点
                    方法简单
                    硬件易于实现
                缺点
                    统计的是各块两次替换间访问次数, 不能严格反应近期被访问情况
            先进先出替换策略
                先调入的块先被替换
                优点
                    不需要随时记录使用情况
                    易于实现
                    系统开销小
                缺点
                    一些需要经常使用的块可能被新块替换
            近期最少使用替换策略
                将CPU近期最少使用的块替换掉
                需要随时记录各个块使用情况
                为每个块设置未访问次数计数器
                每次Cache命中, 计时器清零, 其他各块自增
                把计数值最大的块替换
                优点
                    确保新加的块保留
                    淘汰频繁调用后不需要的数据
                    提高Cache利用率和命中率
                    硬件实现不太困难
    Cache脱靶原因
        分块太小
            程序开始执行时, 主存块逐步复制进Cache, 此时容易脱靶
            块越大, 越不容易脱靶
        容量太小
            Cache容量小, 需要频繁替换Cache, CPU访问主存次数增加
        替换进Cache的主存块过大或过多
            替换进Cache的主存块数目多, 会替换掉下次要访问的指令或数据
            数据块越大, 替换所传数据量越大
            Cache所含块数减少, 少数块刚装入就被覆盖掉
    提高Cache性能方法
        增大Cache容量
            内存容量比4:1000较好
        通过结构设计减少脱靶次数
            指令数据分开存储分别设计策略
            分成多级Cache
        预取技术提高命中率
            提前将未来可能需要的数据装入Cache

3.6 存储器系统设计
    存储器系统设计考虑问题
        CPU总线负载能力
        CPU时序与存储器存取速度配合
        存储器地址分配和片选
        控制信号的连接
    存储器扩展
        位扩展, 字扩展, 复合扩展