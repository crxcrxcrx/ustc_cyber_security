4 总线和接口

4.1 总线技术
    SOC 
        System On Chip
        片上系统
    STB 
        STroBe
        频闪, 选通信号
    ACK
        Acknowledgement
        应答
    接口
        计算机各个部件间协调工作需要的中间环节, 就是I/O接口
        起电路转换, 缓冲速度匹配作用
    总线
        计算机内部或系统间传输信息的公共信道
        早期互联方式, 分散连接, 内部连线复杂, 扩展性差, 效率高
        现代互联方式, 总线连接, 内部连接简洁, 扩展性好, 有竞争问题
    总线与接口的区别和联系
        电路单元的硬件电路
            接口包括电路单元内的硬件电路
            总线包括电路单元内的硬件电路和传输管理信息的规则协议
            挂接在总线的电路单元一定需要相关接口电路
        点到点连接与多点互联
            点对点需要接口电路, 不一定需要总线协议
            多点互联不仅需要接口电路, 还要按照总线协议规范
        有时候不做严格区分, 广义接口还包括相应驱动程序
    总线基本特性
        共享, 多部件共享总线
        分时, 任意时刻只能有一个设备发送, 但可有多个设备同时接收, 是制约性能的瓶颈
    总线主要性能指标
        总线频率
            每秒传输数据最大次数
        总线宽度
            总线可同时传输的数据位数
        总线带宽
            前两者相乘, 注意B和bit的单位转换
        同步方式
            同步总线, 主从模块严格按照确定时钟传输, 速率较高, 对模块有要求
            异步总线, 主从模块通过应答握手确保传送, 适应性好, 但会减少带宽
        总线复用
            同一线路不同时刻传输不同内容
        信号线数
            数据, 地址, 控制, 电源总线数总和
            数量和性能不成正比
        总线控制方式
            并发工作, 自动配置, 仲裁方式, 逻辑方式, 计数方式等
        寻址能力
            地址总线的位数和所能直接寻址的存储器空间大小
        总线的定时协议
            为同步, 需要有信息传送的时间协议
            分同步总线定时, 异步总线定时, 半同步总线定时
        负载能力
            总线上最多能连接的器件数, 一般指扩展槽个数
    总线特性
        机械特性
            保证机械的可靠连接
        电气特性
            保证电气的正确连接
        功能特性和规程特性
            保证正确传输信息
    总线分类
        物理接口分
            电缆式, 主板式, 背板式
        总线信号传输类型分
            数据总线, 地址总线, 控制总线, 电源总线
        控制特性分
            同步总线, 异步总线, 半同步总线
        通信方式分
            串行总线, 并行总线
        位置分类
            片内总线, 芯间总线, 内总线, 外总线
        时分复用分
            非复用, 复用
    总线结构分类
        单总线
            系统总线连接所有设备
            优点
                结构简单
            缺点
                设备间传输速率不匹配降低速率和效率
        双总线
            面向CPU
                I/O总线连接CPU和I/O设备接口
                存储总线连接CPU和存储器
                为解决单总线各个设备间速率不匹配问题, 所有设备通过CPU互联
                优点
                    提高了传输信息的速率和效率
                缺点
                    存储器和I/O设备没有直接通路, 须CPU中转, 降低CPU效率
            面向存储器
                系统总线连接所有设备
                存储总线连接CPU和存储器
                在单总线基础上, 新增CPU和存储器间的存储总线
                优点
                    提高了传输信息的速率和效率
                缺点
                    CPU和I/O设备都要访问存储器时, 会产生冲突和争用
        三总线
            主存总线连接CPU和内存
            I/O总线连接CPU和I/O设备接口
            DMA总线连接存储器和I/O设备接口
            优点
                分工明确, 不同总线用于不同场合
            缺点
                任意时刻只能有一套总线使用,主存总线和DMA总线不能同时访问主存
        四总线
            局部总线连接CPU和Cache与桥
            系统总线连接Cache与桥和存储器
            高速总线连接Cache与桥, 扩展总线接口和高速I/O设备
            扩展总线连接扩展总线接口和低速I/O设备
            优点
                理论上很完美了
            缺点
                需要更复杂的仲裁机制来协调
    总线仲裁
        总线的设备
            总线主设备, 主控模块, 主机
            总线从设备, 从属模块, 从机
            主设备可有控制总线能力
            从设备可响应总线的数据请求, 但不可控制总线
            早期一个主设备占有总线
            现在多个主设备共享总线很普遍
            总线仲裁从多总线设备提取出来
        仲裁
            总线的使用权分配
            电路基础
                线与逻辑
            方式
                总线允许BG, 总线请求BR, 总线忙BB, BG和BR是动作, BB是状态
                集中式, 将控制逻辑集中在一处
                    串行仲裁(菊花链仲裁)
                        BG串接各设备
                        BR并接各设备
                        BB并接各设备
                        越靠近裁决器,优先级越高
                        存在传播延迟, 与模块数量成正比
                        优点
                            结构简单
                            造价低
                        缺点
                            由于存在传播延迟, 一般只能接少量模块
                            可靠性低, 一个模块故障整条链就会失效
                    并行仲裁(独立请求式仲裁)
                        BG直连裁决器
                        BR直连裁决器
                        BB并接各设备
                        裁决器内置优先级编码器和译码器确定优先级
                        优点
                            判断速度快
                            速度与模块数无关
                        缺点
                            BG和BR较多, N个模块需要2N条
                    串并行混合仲裁
                        BG串接各设备后直连裁决器
                        BR并接各设备后直连裁决器
                        BB并接各设备
                        BR优先级并行部分由裁决器内部电路决定, 串行部分由远近决定
                        先并接后串接
                        优点
                            结合了两种思路, 更灵活
                            易于扩充, 且不过于复杂
                            响应速度较快
                分布式, 将控制逻辑分散在各个部件
                    自举分布式仲裁
                    不需要中心裁决器, 每个设备独立决定自己是否是最高优先级请求者
                    原理
                        申请期
                            需请求控制的设备发送请求信号
                        裁决期
                            每个设备将各个申请信号的合成信号取回分析来确定控制权
                            根据优先级判断
    总线操作与时序
        总线操作
            通过总线进行信息交换的过程
        总线周期
            完成一次完整信息交换的时间
            阶段
                请求及仲裁阶段
                    主模块请求, 裁决器决定分配总线资源给哪一个请求源
                寻址阶段
                    取得总线使用权的主模块参与
                    通过总线发出要访问的从模块地址和有关命令
                    通知从模块开始启动
                数据传输阶段
                    主从模块进行数据传输
                结束阶段
                    主从模块有关信息从总线上撤销, 让出总线资源
        总线时序
            总线操作过程中总线上个信号在时序上的配合关系
            不同操作需要不同总线时序配合
        时序
            同步总线时序
                统一时标控制
                时标由CPU总线控制部件发出送到总线所有部件
                时标也可以由每个部件各自时序发生器发出, 但需要总线控制进行同步
                优点
                    模块间配合简单一致
                缺点
                    主从模块时间配合必须强制同步, 公共时钟要以最慢速部件为准
            异步总线时序
                允许各模块速度不一致
                没有公用时钟, 通信时采用应答方式联络协调工作
                互锁方式又称握手方式
                主设备发送数据同时发送STB, 从设备回复ACK
                主从模块间增加两条握手应答线
                握手方式
                    不互锁方式
                        主设备
                            发STB, 告诉从设备当前数据有效
                            间隔固定时间后, 认为从设备已收到, 撤销STB
                        从设备
                            收到数据后发送ACK, 应答当前数据
                            间隔固定时间后, 撤销ACK
                        期间主从设备可以通信
                    半互锁方式
                        主设备
                            发STB, 等待从设备应答
                            只有收到ACK, 才撤销STB
                        从设备
                            收到数据后发送ACK, 应答当前数据
                            间隔固定时间后, 撤销ACK
                    全互锁方式
                        主设备
                            发STB, 等待从设备应答
                            只有收到ACK, 才撤销STB 
                        从设备
                            收到数据后发送ACK, 应答当前数据
                            只有发现主设备撤销STB后, 才撤销ACK
                优点
                    相对而言可靠
                        兼顾了超时机制的话更可靠
                    满足不同设备速度兼容
                缺点
                    应答交互导致设备速度减慢
            半同步总线时序
                对同步总线的一种优化
                快速的设备同步
                慢速设备增加ready/wait#状态信号线请求延长周期
                优点
                    提高了系统的适应性
                    属于折中办法
                缺点
                    速度仍然偏低
            周期分裂式时序
                和同步异步方式无论如何都占着总线资源不同
                将传输周期分成子阶段
                寻址阶段, 数据传输阶段分离, 类似分步流水线思想
                优点
                    过程更精细
                    时间耗费少
                缺点
                    实现较同步和异步复杂

4.2 片内总线AMBA
    AMBA
        Advanced Microcontroller Bus Architecture
        高级微处理器总线架构
    AHB 
        Advanced Highperformance Bus
        高级高性能总线
    ASB 
        Advanced System Bus
        高级系统总线
    APB 
        Advanced Peripheral Bus
        高级外设总线
    AXI 
        Advanced eXtensible Interface
        高级可延伸总线
    独立于处理器和芯片制造工艺
    有众多第三方支持
    定义了三种不同总线
        AHB
            高性能
            流水线操作
            多总线主机
            突发传输
            分裂式操作
        ASB 
            高性能
            流水线操作
            多总线主机
        APB 
            低功耗
            地址锁存和控制
            接口简单
            适合大多数外设
    基于AMBA总线的系统
        以AHB或ASB作为高性能系统中枢总线
            支持CPU, 片上存储器, 外部存储器和DMA设备间数据传输
        桥接器连接低带宽APB
            低速的外设挂在APB上
    已有多个版本
        AMBA2已经相对完整
        AMBA3侧重引入高性能功能支持
        AMBA4和AMBA5针对多核CPU环境做了相对优化
    AHB 
        AHB要素
            AHB主机
                总线主控模块
                发起读写操作
                只能有一个总线主机有效且使用总线
            AHB从机
                总线从属模块
                给定地址空间范围内响应主机发起的读写操作
                从机将成功, 失败, 等待信号返回给有效主机
            AHB译码器
                用来对每次传输地址译码, 从而为从机选择信号
                控制一个多路数据选择器
                    读数据选择器
            AHB仲裁器
                确保每次只有一个总线主机被允许发起数据传输
                控制译码器
                控制两个多路数据选择器
                    地址和控制选择器
                    写数据选择器
        AHB特点
            支持突发传输
                启动一次AHB传输可以连续传输一个数据块
            支持分裂式操作
                寻址和数据传输子周期分离
            单周期总线主机移交
                主机在时钟上升沿发出使用请求
                仲裁器在时钟下降沿采样获取请求， 并在下一个时钟上升沿更新允许信号
            单一时钟沿操作
                所有信号变化均发生在时钟上升沿
                利于芯片内集成更多电路单元
            非三态实现
                允许以三态或非三态形式信号线
                    三态实现可双向传输
                    非三态实现读写数据传输线分离
            可扩展更宽数据总线架构
                如现在的64位和128位
        数据传输过程
            寻址阶段
                传输地址信号和控制信号
            数据阶段
                传输读写的数据以及ready/wait#等待信号
                如果等待, 则地址信号和控制信号持续, 数据信号推迟
            数据的突发传输
                一次传输一个数据块而不是单个数据
                需要指定突发传输的递增方式
                    INCR是未标识长度的地址递增
                    WARAP是长度定长的地址循环式递增
        AHB的译码
            通过多路选择器实现主从设备互联
            通过中央地址译码器提供从机选择信号
            由于集中式译码, 每个主机需要时随即驱动自身地址信号, 无需等待总线允许信号
        AHB的仲裁
            无等待状态的仲裁授予
                主机通过HBUSREQ请求信号请求对总线使用
                仲裁器通过HGRANT信号指示主机获得总线使用权
                仲裁器通过HMASTER信号指示当前获得总线控制权的主机号
            有等待状态的仲裁授予
                在无等待的基础上进行
                从机通过HREADY信号指示是否就绪
                主机在HREADY有效时发送地址
            总线控制权在两个主机间的移交
                数据总线控制权滞后于地址总线
                新主机控制地址总线时, 原主机仍控制数据总线
                若原主机是突发传输, 则总线控制权移交发生在一次突发传输末尾
        AHB主机接口和时序参数
            部分主机接口
                输入
                    HGRANT 
                    HREADY 
                输出
                    HBUSREQ
                    HLOCK
            部分从机接口
                输入
                    HADDR
                    HWRITE
                输出
                    HREADY
        分裂式传输SPLIT
            地址阶段和数据阶段分离
            二级流水线操作
    新的总线 
        AXI, 在AMBA3引入
            进一步分离了总线的通道, 分解为五个独立通道
                读地址, 读数据, 写地址, 写数据, 写响应
            进一步加速对存储器访问
        后面还有ACE, CHI等

4.3 系统总线与外部总线
    许多总线标准都没有了, 有PCI, PCIe和USB还在用
    现在最广泛的是USB
    PCI
        Peripheral Component Interconnect
        外部设备互联总线
    PCIe 
        Peripheral Component Interconnect express
        快速外部设备互联总线
    USB 
        Universal Serial Bus
        通用串行总线
    FSB     
        Front Side Bus
        前端总线
    PCI 
        并行传输
        CPU, Cache和Host/PCI桥三者通过前端总线共节点连接在一起
        Host/PCI桥和内存连接
        Host/PCI桥连接PCI总线
        总线连接各种PCI设备, 如PCI/ISA桥, PCI/PCI桥, PCI设备等
    PCIe 
        串行传输, 差分信号
        CPU, 内存, PCIe桥, PCI设备以及交换器连接到根复合体
        交换器用于扩展PCIe总线, 相当于路由功能
        PCIe桥负责转换, 相当于桥接功能
    USB 
        串行传输, 支持即插即用和热插拔功能
        CPU通过前端总线FSB连接北桥
        北桥负责联系内存显卡等吞吐量最大的部件, 并和南桥连接
        南桥负责联系中低速外部设备

4.4 I/O接口
    DVI 
        Digital Video Interface
        数据视频接口
    HDMI 
        High Definition Multimedia Interface
        高清多媒体接口
    DMA 
        Direct Memory Access
        直接存储器存取
    GPIO 
        General Purpose Input and Output ports
        通用可编程输入输出接口
    DCE
        Data Communication Equipment
        调制解调器, 数据通信设备
    DTE 
        Data Termenal Equipment 
        数据终端, 数据终端设备
    I2C 
        InterIntegrated Circuit
        两线式串行总线
    SPI 
        Serial Peripheral Interface
        同步串行外设接口
    I/O接口必要性, 外设多样性
        速度差异
        信号电平不一致
        数据格式不同
        时序不匹配
    因此需要中间电路和CPU相连, 是I/O接口
    I/O接口功能
        设置数据缓冲解决速度不匹配问题
        设置电平转换电路解决电平不一致问题
        设置信息转换逻辑满足自格式要求
        设置时序控制同步工作
        提供地址译码电路
        提供I/O控制, 读写控制, 中断控制等逻辑
    I/O接口分类
        按传输方式
            并行接口
            串行接口
        按时序控制
            同步接口
            异步接口
        按主机访问设备控制方式
            程序控制接口
            中断接口
            DMA接口
        按数据流动方向
            单工接口
            半双工接口
            全双工接口
    接口的规范
        存储接口SATA
        通用数据接口USB
        视频接口DVI
        视频接口HDMI
    I/O接口特性
        机械, 电气, 功能, 规程
    接口标准定义中, 有一部分也纳入了数据块格式, 数据块检验等数据链路层功能
    I/O端口
        是I/O接口电路中的各类寄存器
        CPU和外设通信时, 主要传输数据信息, 状态信息和控制信息
        在接口电路, 这些信息分别进入不同寄存器, CPU通过地址范围对寄存器寻址进行数据交换
        通常寄存器和它的控制逻辑统称为I/O端口
        端口分类
            数据端口
                用来存放CPU与外设交换的数据
                起缓冲作用
            状态端口
                指示外设状态
                常见状态位
                    准备就绪位
                        对输入端口表明待读
                        对输出端口表明待写
                    忙碌位
                        表明设备是否可接受数据
                    错误位
                        指示传送过程是否产生错误, 便于CPU进行处理
                        可设置多个表明不同性质错误
            命令/控制端口
                存放各种CPU向接口发出的命令和控制
                常见命令
                    启动, 终止, 允许中断
        此外还有中断控制逻辑便于处理中断请求信号的建立与撤销
        端口编址方法
            端口和存储器统一编址, 也称存储器映像的I/O
                优点
                    对I/O口操作对存储器操作相同, 无需专用I/O指令 
                    外设数目或I/O数目几乎不受指令限制
                    CPU读写控制逻辑简单
                缺点
                    占用一部分存储器空间
                    增加了地址译码电路复杂性
            端口和存储器单独编址, 也称I/O映像的I/O
                优点
                    不占用存储器地址空间
                    端口地址译码简单, 寻址快
                    专用I/O指令和存储器指令区别明显, 程序编制清晰
                缺点
                    专用I/O指令类型少, 远不如存储器访问指令丰富
                    CPU提供存储器读写和I/O读写两套信号
    I/O传送方式
        程序控制方式
            无条件传送, 即同步传送
                对简单外设操作, 所需软硬件较少
                需要输入输出时, 默认输入输出设备已准备好
                优点
                    无需对外设查询
                    需要输入或输出, 直接执行I/O指令, 立即进行操作
                缺点
                    可能盲读盲写
                对外设和接口要求
                    输入需要使用缓冲器
                        增长保持时间且不占用总线
                    输出需要使用锁存器
                        需要电路保持数据
                        防止快速CPU的数据保持时间短, 慢速设备无法读取
            条件传送, 即异步查询传送
                大多数外设都是这个方式
                需要输入输出时, 查询外设状态, 不忙或准备好才进行操作, 多外设还需考虑优先级
                优点
                    避免了盲读盲写操作, 可靠性提高, 和中断, DMA方式硬件接口电路相对简单
                缺点
                    但是降低了CPU效率, 因为I/O响应速度慢
                对外设和接口要求
                    提供状态口和数据口
        中断方式
            也可归类为程序控制方式, 但与前两者不太相同
            需要输入输出时, 外设向CPU发送中断请求, CPU在中断服务程序完成数据交换
            中断 
                计算机终止当前程序运行转去中断服务程序, 完毕后返回继续运行正常程序
                CPU外中断是中断, 内中断是陷阱
                有时中断也称异常, 现在中断陷阱和异常不做区分
                微处理器习惯用异常处理机制来设计中断技术
                中断向量
                    中断服务子程序的入口地址, 用于跳转
                    所有中断服务子程序入口集中存放存储器特定区域, 是中断向量表
                    中断索引
                        中断发生时, 系统根据中断类型码到中断向量表获取中断向量
                中断优先级
                    中断请求有优先顺序之分
                    处理多个中断请求可根据事先规定的策略
                    外设优先级判断可用软件查询, 硬件管理, 专用芯片处理
                    管理方法
                        软件查询
                            也需要少量硬件电路
                            CPU写的中断允许寄存器和外设写的中断请求寄存器
                            将对应寄存器间请求与, 再或到一起作为输出
                        硬件管理
                            中断优先权编码电路
                                加一层优先级比较电路
                                通过优先编码器和比较器实现
                            菊花链式优先权编码电路
                                以串入的优先级编码电路顺序决定设备中断优先级
                中断嵌套
                    正在执行中断服务子程序时, 优先级更高的中断到达
                    若此时CPU允许中断, 则继续中断
                中断屏蔽
                    通过硬件电路或软件设置
                    在某些情况下对中断源产生的中断请求能否到达CPU进行限制
                中断处理过程
                    中断响应
                        确定相应中断源
                        查询中断向量表
                        保护现场和断点
                        进入中断子程序
                    中断处理
                        执行中断服务子程序
                    中断返回
                        现场恢复和断点恢复
            优点
                提高CPU效率
                外围设备具有申请服务主动权
                CPU和外设可并行工作
                可适应实时系统对I/O处理要求
                I/O端口状态查询不是CPU, 是中断控制器, 节省了CPU时间
        DMA方式
            传统I/O接口和存储器进行数据传送时, 至少需两个总线周期
            每次中断都要有较大开销保护和恢复现场
            对高速外设可能无法满足性能
            DMA方式是当外设需DMA方式传送数据时
                CPU让出总线控制权, 专用硬件接口接管总线
                在I/O接口与存储器间直接数据传送
            基本步骤
                DMA控制器向CPU请求总线
                CPU响应后释放总线控制权
                DMA控制器接管总线, 控制外设内存进行数据传送
                DMA控制器撤销总线请求
                CPU撤销总线响应并重新收回总线控制权
            基本工作方式
                单字节传输, 只传送一个字节, 传完就释放总线控制权
                块传输(组传输), 传输一批数据, 传完才释放总线控制权
                请求传输, 与块传输基本类似, 但每传一个字节就要检测DMA请求是否有效
            特点
                依靠硬件数据传送
                没运行程序, 不能处理较复杂的事件
                DMA控制器本身也是接口芯片
                    可设置多通道为多外设提供DMA服务
                    每通道都有自己的寄存器和DMA请求响应信号线,还需要优先级排队
    并行接口
        并行传输适合近距离较低速, 抗干扰能力弱
        无握手信号的并行接口带典型电路
            简单电路模块, CPU和外设传输数据时, 总假定外设已准备好
            输入示例
                线性键盘, 矩阵键盘
            输出示例
                静态LED显示, 动态LED显示
        带握手信号的并行接口输入输出电路
            和总线类似
        通用可编程并行接口模块电路GPIO
            可输入可输出还可中断等
            一般集成在CPU里
    串行接口
        串行传输适合远距离较高速, 抗干扰能力强
        通过Modem调制解调器实现远程数据通信
        比特率, 是单位时间bit数, 单位bps 
        波特率, 单位时间信号数, 单位Baud
        同步通信方式
            统一时钟
        异步通信方式
            通过信号波形编码表示传输数据单元起止, 允许频率误差
        I2C接口总线
            两线式串行总线
                数据线
                时钟线
            主从式通信
            多主机总线
            串行发送地址
        SPI接口总线
            至少四线式串行总线
                时钟线
                主机输入从机输出线
                主机输出从机输入线
                片选线
            主从式通信
            单主机总线
            串行发送地址