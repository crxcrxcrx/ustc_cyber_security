2 公钥基础设施PKI

2.1 PKI基本概念
    PKI 
        Public Key Infrastructure
        公钥基础设施
    CA 
        Certificate Authority
        认证中心
    RA
        Registration Authority
        注册机构
    LDAP
        Lightweight Directory Access Protocol
        轻量级目录访问协议
    CRL 
        Certificate Revocation List
        证书吊销列表
    PKI是非对称密码算法原理技术实现并提供安全服务的通用性安全基础设施
    证书基本结构
        主体身份信息
        主体公钥值
        认证机构名
        认证机构数字签名(=前三者利用认证机构的签名私钥生成的)
    PKI组成
        PKI策略+软硬件系统->CA+RA+证书管理系统->PKI应用
        CA
            证书签发机构
            PKI核心构件
            权威, 可信任, 公正
        RA 
            实现注册功能, 可由CA实现
            但是随着用户增加, 多个RA可分担CA功能
            增强可扩展性
            RA只负责审查, 不能负责颁发或撤销证书
        证书管理系统
            证书库
                这是颁发和撤销的证书的存放地
                提供公共查询, 常用目录服务器进行服务
                采用LDAP协议
                可以获得通信对方的公钥, 在证书中
                可以验证通信实体证书是否被撤销, 基于签名
            密钥备份及恢复系统
                签名密钥对
                    作为印章, 为保证唯一抗否认, 不备份, 生命周期较长
                加密密钥对
                    用于分发会话密钥, 需要进行备份且频繁更换
            证书作废处理系统
                通过CRL完成
                也需要CA签发
            自动密钥更新
                无需用户干预, 证书失效之后自动更新生成新证书
            密钥历史档案
                密钥更新导致用户有多个证书
                这些证书和相应私钥(除签名私钥)组成密钥历史档案
            PKI应用接口系统
                为各种各样应用提供安全一致可信任的PKI交互系统
                确保建立的网络环境安全可信, 降低管理成本
            交叉认证
                多个PKI独立运行相互建立信任关系
                两个CA间互相认证颁发证书
    建立标准化PKI优势
        节省费用, 互操作性, 开放性, 一致的解决方案, 可验证性, 可选择性
    PKI基本服务
        认证
            实体鉴别, 数据来源鉴别
        完整性
            Hasse+数字签名技术 
            MAC(数字信封传输对称密钥)
        保密性
            数字信封传输会话密钥
        不可否认性服务
            收据数字签名
            安全时间戳
        公证服务
            CA作为第三方进行数据验证

2.2 PKI和电子商务中常用密码技术
    信息加密解密
        哈希,对称,非对称相差约100倍时间
        因此尽量用对称加密
        但是对称密钥需要通过数字信封发送
    数字签名
        对发送的数据摘要进行签名
        附在数据源上已发送
        数据完整性和不可否认性
    报文检验码 
        需要密钥参与的单向Hasse函数
        数据完整性和不可否认性
    数字信封
        先对信息签名, 然后用对称密钥加密
        再把对称密钥用收方公钥加密, 附在信息后
        总之, 收方公钥加密两个收方会话的对称密钥
    双重数字签名(如SET协议)
        hasse, hasse, 再hasse

2.3 PKI功能操作
    PKI步骤
        端实体向CA提出数字证书申请
        CA(或RA)验证身份, CA签发
        CA将证书公布到证书库里
        应用时, 发送方端实体用签名做认证, 保证完整性, 不可否认性, 然后发给接收方
        接收方接收信息, 用端实体公钥验证签名, 并到证书库查明证书状态
        证书库返回检查结果
    证书的初始化, 使用和撤销
        初始化
            用户实体注册
                实体->注册表格请求->RA
                RA->注册表格应答->实体
                实体->注册表格提交->RA
                RA->注册建立请求->CA
                CA->注册建立结果->RA
                RA->注册结果->实体
            密钥对的产生
                可以通过用户, CA, CA信任的第三方产生
            证书创建
                创建操作
                    认证机构签名私钥数字签名
            证书分发
            密钥备份
        使用
            证书获取
                发送者发送签名附加自己证书
                单独发送证书
                从访问发布证书的目录服务器获得
                从其他公共站点共享获得
            证书验证
                过程是迭代寻找链中下一个证书和它上级的CA证书
                使用之前必须检查CRL
                验证操作
                    数字签名认证
                    合规性检测
                    CRL查询
                验证流程
                    拆封证书
                    数字签名认证
                    证书链认证
                    序列号验证
                    有效期验证
                    CRL查询
                    证书使用策略认证
                    最终用户实体证书确认
            密钥恢复
                对终端用户丢失的加密密钥,从CA或第三方恢复
                对终端用户丢失的签名密钥, 不可恢复
            密钥更新
                合法密钥过期进行新的自动产生密钥和颁发证书
        撤销
            证书过期
                自然结束生命周期
            证书撤销
                因变更而过期前被撤销
            存档
                维持CRL和历史记录
                CRL操作
                    认证机构签名私钥数字签名
                以便解密以前密钥加密的信息
                还可确保过期证书不会继续活动
            审计信息
                第三方长期储存
                对于恢复, 审计, 解决争议有积极效果

2.4 PKI体系互通性与标准化
    BCA 
        Bridge Certificate Authority
        桥认证中心
    信任关系建立方法
        全球统一的根CA, 不现实
        交叉认证方式, 对等CA间互相签发
        基于层次化结构信任路径
        分布式CA
    信任的相关概念
        信任
            实体假定另一个实体会严格按照其期望去行动
        可信CA
            个体假设CA能建立并维持一个准确的个体-公钥属性间的绑定
    信任CA结构
        层次模型
            优点
                易于控制, 父节点主宰子节点
                信任路径明确
            缺点
                风险集中, 父节点损坏会导致子节点破坏
                认证关系需要根CA建立时便确立
        分布式信任结构模型
            优点
                健壮性, 网状结构把信任分散
                CA通过交叉认证在不同CA建立信任
                可扩展性好, 用户易于接入, 只需给其颁发证书的CA建立信任关系即可
            缺点
                证书链不稳定, 可能很长
                多选择导致环路
        桥式结构
            需要一种特殊的CA, BCA
                起到信任桥梁作用
                不直接向用户签发证书
                不作为一个PKI体系信任锚点
                只用来建立端到端信任关系
        混合结构
            前几者的混合结构

2.5 X.509标准
    MIME
        Multipart Internet Mail Extensions
        多用途互联网邮件扩展
    PKI标准化部分内容
        X.509
            是ISO和CCITT/ITU-T的X.500标准系列一部分
            采用大量篇幅定义证书和CRL
        PKIX工作组
            IETF的工作组, 负责制定和标准化PKI以及X509
            目的使得X509标准的证书和CRL适用于Internet需要
            证书和证书撤销列表, 证书管理, 操作, 策略和认证管理陈述结构
        LDAP
            轻量级目录访问协议
            是X.500中DAP的子集
            包含兼容性内容
        ANSI X9F
            金融服务工业标准
        ISO TC68
            从事公钥技术标准化, 主要是金融业
        S/MIME 
            Email加密规范增加了PKI概念
            证书格式, 证书整理, 证书撤销
        SET 
            保证电子交易安全性
    PKI标准化主要内容
        基本安全算法
            公钥通信安全协议
            对称DES算法
            非对称RSA算法
            散列函数
            数字签名标准DSS
        公钥基础设施
            ASN.1
            CA格式
            X.509
            PKIX 
            SET
        Email安全
            安全电子邮件标准
            加密报文语法, 协议, 报文规范
            增强安全服务
            S/MIME
            PEM
            PGP
        Web安全
            S/HTTP
            SSL
    面临问题
        缺少相关法律的一定支持
        缺乏统一行业技术标准
        与国外的CA交叉认证问题
        相关应用开发较少, 已开发应用不够广泛
        可信度不完全被看好
    解决方法
        出台相关法律和统一技术标准
        建立CA联盟, 实现交叉认证
        系统建设应用系统扩展市场
    X.509标准
        使用最多的V3, V4还在标准化, 目前在用的均符合V3
        PKI是在X.509基础上发展的
        内容
            OSI参考模型安全体系结构定义, 引用X.800定义(安全假设)
            目录模型定义, 引用X.501定义(维护和管理)
            证书和CRL
                公钥证书框架, 对应认证
                属性证书框架, 对应访问控制的权限管理 
                CRL框架
        同义词, 数字证书, 电子证书, 证书, X.509公钥证书
        基本结构(最简构成)
            主体身份信息
            主体公钥值
            认证机构名
            认证机构数字签名(=前三者利用认证机构的签名私钥生成的)
        证书表示方法
            CA<A>=CA{V, SN, AI, CA, UCA, A, UA, Ap, T^A, EXT}
            V1
                V, 版本号
                SN, 证书序列号
                AI, 证书签名算法的标识符
                CA, CA名称
                T^A, 证书有效期
                    起始日期
                    终止日期
                A, 用户名称
                Ap, 用户公钥
                    算法标识
                    用户主体公钥
            V2
                UCA, CA可选的唯一标识符
                    公钥标识
                    证书签发者甄别
                    签发证书的序号
                UA, 用户可选的唯一标识符
            V3
                EXT, 扩展项
                    密钥扩展
                        主体公钥标识
                        密钥用途
                        私钥有效期
                            起始日期
                            终止日期
                    策略扩展
                        CA承认的证书策略以及策略映射
                    主体和签发者信息扩展
                        主体代用名
                        CA代用名
                        用户主体目录属性
                    认证路径扩展
                        基本约束
                        名称约束
                        策略约束
                    CRL扩展
                        CRL分布点地址
            末尾
                证书本身签名的算法, 参数, 签名内容

2.6 认证机构CA系统
    PKI的核心
    负责给各个实体颁发电子证书
    对实体身份信息和相应公钥数据进行数字签名
    捆绑实体的公钥和身份来证明实体的网上身份真实性
    负责在交易中检验和管理证书
    系统功能
        证书申请
            在线申请
            离线申请
        证书审批(可以由RA承担)
        证书颁发
            在线发放
            离线发放
        证书撤销
            密钥泄露
            从属关系变更
            终止使用
            CA本身原因
        证书更新 
            人工方式
            自动方式
        CRL管理
        证书归档
        CA自身的维护管理
        CA自身的密钥管理