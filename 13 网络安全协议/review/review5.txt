5 SSL/TLS基本协议

5.1 SSL协议族概述
    SSL 
        Secure Socket Layer
        安全套接字协议
    TLS 
        Transport Layer Security 
        传输层安全
    是传输层的安全协议
    在不提供安全保护的网络上要实现安全信息传输, 须端到端的上层安全协议保护
    使用TCP协议提供的可靠数据流服务, SSL/TLS把数据分割成带有报头和安全保护的记录信息
    概述
        IETF提出
        具有保护传输数据以及认证和鉴别通信实体的功能
        安全通道透明, 独立于应用层
        传输层采用TCP, 提供可靠性
        重点讨论SSLv3的协议, 即TLS1.0-1.3
    功能
        客户对服务器身份认证
            允许客户浏览器使用公钥加密技术和CA证书来确认服务器合法性
        服务器对客户身份认证
            通过公钥加密技术和CA证书来确认客户, 也可以通过用户名密码认证
        建立服务器与客户之间安全数据通道
            要求端到端加密解密, 还需要检查完整性
    提供服务
        可靠性, MAC SHA256, 384, 512
        加密, AES等
        完整性, X.509v3数字证书
        数据流记录
    简介
        SSL协议分成两子层
            底层(头标)
                记录协议
                    建立在可靠的传输层协议TCP上
                    用来封装上层协议
                    提供连接安全性特点
                        保密性, 使用对称加密算法
                        完整性, 使用HMAC算法
            上层(内容)
                握手协议
                    用于客户与服务器之间建立安全连接之前交换信息
                    相互认证
                    协商加密算法和密钥
                    提供连接安全性特点
                        身份认证, 至少单向, 可以双向
                        协商得到的共享密钥安全, 中间人无法得到
                        协商过程本身可靠
                密码变化协议
                    告知改变密码参数
                警告协议
                    指示安全错误
                    警告和致命两个级别
                    终止会话也通过警告协议发送
                用户数据
                    应用层的数据等
    SSL/TLS协议栈位置
        为上层协议提供安全性, 头标在TCP和应用层头标之间
    底层协议
        头标某些字段
            上层协议类型
                指示上层协议
            主版本, 次版本
                表明版本, 各8位
            加密后的数据长度
                16位, 不超过2^14+2048B
                支持压缩但是很少用
        底层保护的密文数据
            保护方式
                数据->成帧->压缩->加MAC->加密->加头标
    握手协议详解
        A是客户B是服务器
        粗略来看的握手协议
            协商加密算法
                A->B, 支持的加密算法, A生成的随机数
                B->A, 验证A身份, 选择加密算法, B生成的随机数
                A->B, 加密的B的公钥, 握手信息摘要的加密结果
            发送ID认证和加密 
                B->A, 握手信息摘要的加密结果
                A<->B, 保护的数据
        会话重用
            会话通常被此协议认为有较长生命期, 在此之上需在会话基础派生多个连接
                因为协议被设计成与HTTP协议协同工作
                HTTP可在相同客户服务器间建立多个TCP
            一次一密会话主密钥通过发送包括nonce握手消息的方式
                在主密钥基础上派生多个连接
            未重用情况
                注意多了一个会话ID
                A->B, 支持的加密算法, A生成的随机数
                B->A, [会话ID], 验证A身份, 选择加密算法, B生成的随机数
                A->B, 加密的B的公钥, 握手信息摘要的加密结果
                B->A, 握手信息摘要的加密结果
                A<->B, 保护的数据
            重用情况
                注意多了两个会话ID
                    第二步返回相同ID代表B同意会话重用
                    返回不同则不重用
                A->B, [会话ID], 支持的加密算法, A生成的随机数
                B->A, [会话ID], 验证A身份, 选择加密算法, B生成的随机数
                A->B, 加密的B的公钥, 握手信息摘要的加密结果
                B->A, 握手信息摘要的加密结果
                A<->B, 保护的数据
        密钥计算
            秘密值S, 预备主密钥
            主密钥K, f(S,R_a,R_b)
            对每个连接, 客户和服务器各三个密钥
                加密密钥, 完整性保护MAC密钥, 初始向量
                由主密钥计算密钥块
                密钥块计算各个密钥
        密钥交换算法
            双方先交换随机数和加密算法
            两类密钥交换算法得到pre_master_secret
                RSA
                    客户产生pre_master_secret, 通过服务器公钥给服务器
                DH 
                    双方协商得到的密钥被用作pre_master_secret
                    包括固定, 暂态, 匿名三种
            从pre_master_secret得到master_secret, 主密钥总是48B, 预备主密钥不一定
        完整的握手协议
            互发建立安全连接请求
                客户发送client_hello
                    客户端版本
                    客户端随机数
                    可选的会话ID(考虑会话重用)
                    支持的加密算法
                    支持的压缩算法
                服务器发送server_hello
                    客户建议的版本
                    服务器支持的最高版本
                    服务器随机数
                    会话ID(考虑会话重用)
                    选中的加密算法
                    选中的压缩算法
            服务器发送证书, 密钥交换证书, 可选的证书请求, 阶段结束标志
                服务器发送certificate
                    X.509证书或证书链, 除匿名DH外的密钥交换都需要
                服务器发送server_key_exchange
                    可选
                    若固定DH或RSA交换则不需要
                    匿名DH, 暂态DH, 服务器长期密钥仅用于签名时签发临时密钥需要
                    消息包含对两个随机数以及服务器参数的签名
                服务器发送certificate_request
                    可选
                    若非匿名DH则需要请求
                    包含证书类型和CA
                服务器发送server_hello_done
                    等待应答
            若有证书请求, 客户端发送证书, 然后发密钥交换数据, 可选的证书验证消息
                客户发送certificate
                    可选
                    若之前服务器发送certificate_request则发
                    若之前服务器没有该请求, 则发no_certificate警告
                客户发送client_key_exchange
                    取决于之前服务器选中的加密算法
                客户发送certificate_verify
                    可选
                    包含签名, 对之前所有握手消息计算HMAC
                    HMAC加密时使用主密钥
            互发更改密码构建, 结束握手消息
                客户发送change_cipher_spec
                    把协商得到的适用加密算法类型号放入当前连接状态
                客户发送finished
                    用本次协商的算法和密钥参数发送
                    可检查密钥交换和鉴别过程是否成功
                    包括校验值, 对所有之前的消息进行校验
                    校验时使用主密钥
                服务器发送change_cipher_spec
                服务器发送finished
            握手结束, 开始传递消息

5.2 SSL协议的安全性分析
    支持的加密算法
        RC4, RC2, IDEA, DES 
    支持的密钥
        MD5, SHA1
    认证算法
        X.509
    优势
        抵御监听和中间人攻击
        抵御截拼攻击
        抵御重发攻击
        抵御密码回滚攻击, SSL3.0新加
    不能抵御流量分析攻击
        TLS可抵抗
    存在的问题
        密钥管理问题
            服务器证书可能不是可信CA
        加密强度问题
            较短的密钥加密算法
            目的是不被出口限制
        数字签名问题
            没有数字签名, 无法抗抵赖
    TLS1.3改进
        更快协商过程
            减少握手时间
        增强安全性, 修复或改进以下漏洞
            RSA密钥传输, 不支持前向安全性
            CBC模式密码, 受BEAST和Lucky13攻击
            RC4流密码, HTTPS里并不安全
            SHA1, 以SHA2取代
            任意DH组, 有CVE20160701漏洞
            输出密码, 易受FREAK和LogJam攻击

5.3 SSL的应用
    匿名SSL连接
    SSL VPN
    电子商务